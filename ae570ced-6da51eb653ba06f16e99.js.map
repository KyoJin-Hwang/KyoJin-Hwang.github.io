{"version":3,"file":"ae570ced-6da51eb653ba06f16e99.js","mappings":"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","sources":["webpack://@vallista-land/blog/./src/pages/resume.tsx"],"sourcesContent":["import { css } from '@emotion/react'\nimport styled from '@emotion/styled'\nimport { Button, Container, Spacer, Text } from '@Kyo/vallista-core'\nimport { VFC } from 'react'\n\nimport { Seo } from '../components/Seo'\nimport { useConfig } from '../hooks/useConfig'\n\nconst ResumePage: VFC = () => {\n  const { resume } = useConfig()\n\n  return (\n    <Container>\n      <Seo name='이력서' />\n      {/* 헤더 */}\n      <Header>\n        <Wrapper>\n          <Container>\n            <Title>\n              <Container>\n                <Text as='h2' size={48} weight={800}>\n                  {resume.config.name}\n                </Text>\n                <Text as='h2' size={32} weight={800}>\n                  {resume.config.role}\n                </Text>\n              </Container>\n            </Title>\n            <Spacer y={1} />\n            <SubTitle>\n              {resume.config.bio.map((it) => (\n                <Text as='p' size={20} weight={400} lineHeight={40} key={it}>\n                  <span dangerouslySetInnerHTML={{ __html: it }} />\n                </Text>\n              ))}\n              <Container>\n                <Spacer y={1.5} />\n              </Container>\n              <Container row>\n                <Button size='large' width={220} onClick={() => openNewPage(resume.config.github)}>\n                  <Container row center>\n                    <svg\n                      viewBox='0 0 24 24'\n                      width='30'\n                      height='30'\n                      stroke='currentColor'\n                      strokeWidth='1.5'\n                      strokeLinecap='round'\n                      strokeLinejoin='round'\n                      fill='none'\n                      shapeRendering='geometricPrecision'\n                    >\n                      <path d='M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 00-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0020 4.77 5.07 5.07 0 0019.91 1S18.73.65 16 2.48a13.38 13.38 0 00-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 005 4.77a5.44 5.44 0 00-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 009 18.13V22' />\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      GitHub 방문하기\n                    </Text>\n                  </Container>\n                </Button>\n                {/* velog */}\n                {/* <Button size='large' width={240} onClick={() => openNewPage(resume.config.velog)}>\n                  <Container row center>\n                    <svg width='30' height='30' viewBox='0 0 192 192' fill='currentColor'>\n                      <path\n                        fill-rule='evenodd'\n                        clip-rule='evenodd'\n                        d='M24 0H168C181.255 0 192 10.7451 192 24V168C192 181.255 181.255 192 168 192H24C10.7451 192 0 181.255 0 168V24C0 10.7451 10.7451 0 24 0ZM49 57.9199V65.48H67L80.6799 142.52L98.5 141.26C116.02 119.06 127.84 102.44 133.96 91.3999C140.2 80.24 143.32 70.9399 143.32 63.5C143.32 59.0601 142 55.7 139.36 53.4199C136.84 51.1399 133.66 50 129.82 50C122.62 50 116.62 53.0601 111.82 59.1799C116.5 62.3 119.68 64.8799 121.36 66.9199C123.16 68.8401 124.06 71.4199 124.06 74.6599C124.06 80.0601 122.44 86.1799 119.2 93.02C116.08 99.8601 112.66 105.92 108.94 111.2C106.54 114.56 103.48 118.7 99.76 123.62L88.0601 57.2C87.1001 52.3999 84.1001 50 79.0601 50C76.78 50 72.3999 50.96 65.9199 52.8799C59.4399 54.6799 53.8 56.3601 49 57.9199Z'\n                        fill='currentColor'\n                      ></path>\n                    </svg>\n                    <Spacer x={0.3} />\n                    <Text size={16} weight={600}>\n                      velog 블로그 방문하기\n                    </Text>\n                  </Container>\n                </Button> */}\n              </Container>\n            </SubTitle>\n          </Container>\n        </Wrapper>\n      </Header>\n      <Spacer />\n      {/* 커리어 */}\n      <Box id='career'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.careers.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.careers.list.map((it) => (\n              <TwoColumn key={it.name}>\n                <Container>\n                  <div>\n                    <Text as='h3' size={24} weight={500}>\n                      {it.name}\n                    </Text>\n                    <Spacer y={1} />\n                    <Text as='span' size={16}>\n                      {it.startDate} ~ {it.endDate}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.position}\n                    </Text>\n                    <Text as='span' size={16}>\n                      {it.department}\n                    </Text>\n                    <Spacer y={1} />\n                    <div>\n                      {it.descriptions?.map((it_, idx) => (\n                        <Text key={idx}>{it_}</Text>\n                      ))}\n                    </div>\n                  </div>\n                </Container>\n                <Container>\n                  <div>\n                    {it.projects?.map((it_, idx) => (\n                      <Container key={idx}>\n                        <Text size={24} weight={600} as='h3'>\n                          {it_.url ? <a onClick={() => openNewPage(it_.url!)}>{it_.name}</a> : it_.name}\n                        </Text>\n                        <Spacer y={1} />\n                        <Text size={16}>\n                          {it_.startDate} ~ {it_.endDate}\n                        </Text>\n                        {it_.descriptions?.map((it__, idx) => (\n                          <Text size={16} key={idx}>\n                            {it__}\n                          </Text>\n                        ))}\n                        <Container row>\n                          {it_.techStacks?.map((it__, idx) => (\n                            <Text as={'span'} weight={600} size={16} color={'#0070F3'}>\n                              {it__}\n                            </Text>\n                          ))}\n                        </Container>\n                        <Spacer y={1} />\n                        <ul>\n                          {it_.which?.map((it__, idx) => (\n                            <li key={idx}>\n                              <Text size={14}>{it__}</Text>\n                            </li>\n                          ))}\n                        </ul>\n                        <Spacer y={2} />\n                      </Container>\n                    ))}\n                  </div>\n                </Container>\n              </TwoColumn>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      {/* 사이드 (포트폴리오)*/}\n      <Box id='side'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.side.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.side.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.url ? <a onClick={() => openNewPage(it.url!)}>{it.title}</a> : it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_.title}</Text>\n                          <SubTitleText>\n                            {it_.subTitle.map((it__, idx) => (\n                              <Text size={16} key={idx}>\n                                {it__}\n                              </Text>\n                            ))}\n                          </SubTitleText>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      {/* 스킬 */}\n      <Box id='skills'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.skills.title}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.skills.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_.title}</Text>\n                          <SubTitleText>\n                            {it_.subTitle.map((it__, idx) => (\n                              <Text size={14} key={idx}>\n                                {it__}\n                              </Text>\n                            ))}\n                          </SubTitleText>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      {/* 취미 */}\n      <Box id='hobby'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.hobby.description}\n            </Text>\n            <Spacer y={1.5} />\n            {resume.hobby.list.map((it, idx) => (\n              <Container key={idx}>\n                <Text as='h3' size={24} weight={600}>\n                  {it.url ? <a onClick={() => openNewPage(it.url)}>{it.title}</a> : it.title}\n                </Text>\n                <div>\n                  {it.descriptions?.map((it_, idx) => (\n                    <ul key={idx}>\n                      <li>\n                        <Container>\n                          <Text size={16}>{it_}</Text>\n                        </Container>\n                      </li>\n                    </ul>\n                  ))}\n                </div>\n                <Spacer y={1} />\n              </Container>\n            ))}\n          </Container>\n        </Contents>\n      </Box>\n      {/* 발표 */}\n      {/* <Box id='speaker'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.speaker.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.speaker.list.map((it, idx) => (\n                <li key={idx}>\n                  <Text size={16}>\n                    <a onClick={() => openNewPage(it.url)}>{it.title}</a>\n                  </Text>\n                </li>\n              ))}\n            </ul>\n          </Container>\n        </Contents>\n      </Box> */}\n      {/* 활동 */}\n      {/* <Box id='activities'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.activities.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.activities.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box> */}\n      {/* 강연 */}\n      {/* <Box id='lectures'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.lectures.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.lectures.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box> */}\n      {/* 수상 */}\n      <Box id='awards'>\n        <Contents>\n          <Container>\n            <Text size={40} weight={800}>\n              {resume.awards.description}\n            </Text>\n            <Spacer y={1.5} />\n            <ul>\n              {resume.awards.list.map((it, idx) =>\n                it.url !== null ? (\n                  <li key={idx}>\n                    <Text size={16}>\n                      <a onClick={() => openNewPage(it.url!)}>{it.title}</a>\n                    </Text>\n                  </li>\n                ) : (\n                  <li key={idx}>\n                    <Text size={16}>{it.title}</Text>\n                  </li>\n                )\n              )}\n            </ul>\n          </Container>\n        </Contents>\n      </Box>\n    </Container>\n  )\n\n  function openNewPage(target: string): void {\n    window.open(target, '_blink')\n  }\n}\n\nconst Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n`\n\nconst Box = styled.div``\n\nconst Header = styled.header`\n  padding: 2rem 0;\n`\n\nconst Title = styled.div`\n  max-width: 550px;\n`\n\nconst SubTitle = styled.div`\n  max-width: 550px;\n\n  @media screen and (max-width: 1024px) {\n    & > div:last-of-type {\n      flex-direction: column !important;\n\n      & > * {\n        margin-left: 0;\n        margin-bottom: 1rem;\n      }\n    }\n  }\n`\n\nconst Contents = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 900px;\n  padding: 2rem;\n\n  ul {\n    list-style: disc;\n    padding-left: 1.2rem;\n  }\n\n  li {\n    margin-bottom: 0.5rem;\n    padding: 0.2rem 0;\n    line-height: 1.4;\n\n    &::marker {\n      ${({ theme }) => css`\n        color: ${theme.colors.SUCCESS.DEFAULT};\n      `}\n    }\n  }\n`\n\nconst TwoColumn = styled.div`\n  display: flex;\n  margin-bottom: 2rem;\n\n  & > div:first-of-type {\n    height: auto;\n    box-sizing: border-box;\n    flex: 3;\n    padding-right: 2rem;\n\n    & > div {\n      display: flex;\n      flex-direction: column;\n      gap: 0;\n      position: sticky;\n      top: 85px;\n\n      & > div:last-of-type {\n        ${({ theme }) => css`\n          color: ${theme.colors.PRIMARY.ACCENT_5};\n\n          & > p {\n            margin-bottom: 0.5rem !important;\n          }\n        `}\n      }\n    }\n  }\n\n  & > div:last-of-type {\n    flex: 7;\n  }\n\n  @media screen and (max-width: 1024px) {\n    flex-direction: column;\n\n    & > div:last-of-type {\n      padding-left: 1rem;\n\n      ${({ theme }) => css`\n        border-left: 3px solid ${theme.colors.SUCCESS.DEFAULT};\n      `}\n    }\n  }\n`\n\nconst SubTitleText = styled.div`\n  ${({ theme }) => css`\n    color: ${theme.colors.PRIMARY.ACCENT_5};\n  `}\n`\n\nexport default ResumePage\n"],"names":["Wrapper","Box","Header","Title","SubTitle","Contents","theme","css","colors","SUCCESS","DEFAULT","TwoColumn","PRIMARY","ACCENT_5","SubTitleText","resume","useConfig","name","as","size","weight","config","role","y","bio","map","it","lineHeight","dangerouslySetInnerHTML","__html","row","width","onClick","openNewPage","github","center","viewBox","height","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fill","shapeRendering","d","x","id","careers","title","list","startDate","endDate","position","department","descriptions","it_","idx","projects","url","it__","techStacks","color","which","side","subTitle","skills","hobby","description","awards","target","window","open"],"sourceRoot":""}